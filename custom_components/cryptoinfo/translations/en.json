{
    "config": {
        "step": {
            "user": {
                "title": "Add new sensor",
                "description": "For more information, see the [documentation](https://github.com/heyajohnny/cryptoinfo).",
                "data": {
                    "id": "Identifier",
                    "cryptocurrency_ids": "Cryptocurrency id's",
                    "currency_name": "Currency Name",
                    "unit_of_measurement": "Unit of measurement",
                    "multipliers": "Multipliers",
                    "update_frequency": "Update Frequency (minutes)",
                    "min_time_between_requests": "Minimum time between requests (minutes)"
                },
                "data_description": {
                    "id": "Unique name for the sensor.",
                    "currency_name": "One of the currency names in [this list](https://api.coingecko.com/api/v3/simple/supported_vs_currencies).",
                    "cryptocurrency_ids": "The 'id' values from one or more of the coins/tokens in [this list](https://api.coingecko.com/api/v3/coins/list), separated by commas.",
                    "unit_of_measurement": "Do you want to use a currency symbol? ([Symbol list](https://en.wikipedia.org/wiki/Currency_symbol#List_of_currency_symbols_currently_in_use))",
                    "multipliers": "The number of coins/tokens (separated by a comma). The number of multipliers must match the number of cryptocurrency IDs.",
                    "update_frequency": "How often should the value be refreshed? Beware of the [CoinGecko rate limit](https://support.coingecko.com/hc/en-us/articles/4538771776153-What-is-the-rate-limit-for-CoinGecko-API-public-plan) when tracking multiple cryptocurrencies.",
                    "min_time_between_requests": "The minimum time between the other entities and this entity to make a data request to the API. (This property is shared and the same for every entity.)"
                }
            },
            "reconfigure": {
                "title": "Update existing sensor",
                "description": "For more information, see the [documentation](https://github.com/heyajohnny/cryptoinfo).",
                "data": {
                    "id": "Identifier",
                    "cryptocurrency_ids": "Cryptocurrency id's",
                    "currency_name": "Currency Name",
                    "unit_of_measurement": "Unit of measurement",
                    "multipliers": "Multipliers",
                    "update_frequency": "Update Frequency (minutes)",
                    "min_time_between_requests": "Minimum time between requests (minutes)"
                },
                "data_description": {
                    "id": "Unique name for the sensor.",
                    "currency_name": "One of the currency names in [this list](https://api.coingecko.com/api/v3/simple/supported_vs_currencies).",
                    "cryptocurrency_ids": "The 'id' values from one or more of the coins/tokens in [this list](https://api.coingecko.com/api/v3/coins/list), separated by commas.",
                    "unit_of_measurement": "Do you want to use a currency symbol? ([Symbol list](https://en.wikipedia.org/wiki/Currency_symbol#List_of_currency_symbols_currently_in_use))",
                    "multipliers": "The number of coins/tokens (separated by a comma). The number of multipliers must match the number of cryptocurrency IDs.",
                    "update_frequency": "How often should the value be refreshed? Beware of the [CoinGecko rate limit](https://support.coingecko.com/hc/en-us/articles/4538771776153-What-is-the-rate-limit-for-CoinGecko-API-public-plan) when tracking multiple cryptocurrencies.",
                    "min_time_between_requests": "The minimum time between the other entities and this entity to make a data request to the API. (This property is shared and the same for every entity.)"
                }
            }
        },
        "abort": {
            "already_configured": "This sensor already exists",
            "reconfigure_successful": "Re-configuration was successful"
        },
        "error": {
            "cannot_connect": "Error: Cannot connect",
            "mismatch_values": "The number of cryptocurrency id's ({crypto_count}) does not match the number of multipliers ({multiplier_count})"
        }
    }
}